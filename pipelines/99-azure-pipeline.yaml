resources:
  repositories:
  - repository: TestsRepo # The name used to reference this repository in the checkout step
    type: github
    endpoint: markgar
    name: markgar/shared-arm-tests

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - arm/*
    - pipelines/99-azure-pipeline.yaml

stages:

######################################################################################
- stage: gather_test
  displayName: Gather Resources (code, tests) and Test Templates

  jobs:
  - job: gather_test_job
    displayName: Gather, Test
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    # gather tests from this repository (dev team's tests)
    - checkout: self
      displayName: Gather - Checkout default repository
    - task: CopyFiles@2
      displayName: Gather - Copy ARM templates to Artifact Staging
      inputs:
        contents: '$(Build.SourcesDirectory)/multistage-pipeline/arm/*'
        targetFolder: $(Build.ArtifactStagingDirectory)/arm
        flattenFolders: true   

    # gather tests from the shared repository (security team's tests)
    - checkout: TestsRepo
      displayName: Gather - Checkout tests repository from github
    - task: CopyFiles@2
      displayName: Gather - Copy Pester tests to Artifact Staging
      inputs:
        contents: '$(Build.SourcesDirectory)/shared-arm-tests/*'
        targetFolder: $(Build.ArtifactStagingDirectory)/tests/shared-arm-tests
        flattenFolders: true

    # gather industry tests (CIS4Azure) from nuget.org
    - task: NuGetCommand@2
      displayName: Gather - Restore CIS4Azure from nuget.org
      inputs:
        command: 'restore'
        restoreSolution: '$(Build.SourcesDirectory)/multistage-pipeline/packages.config'
        restoreDirectory: 'nuget/CIS4Azure-nuget'
        feedsToUse: 'select'
        includeNuGetOrg: true
    - task: CopyFiles@2
      displayName: Gather - Copy nuget Pester tests to Artifact Staging
      inputs:
        contents: '$(Build.SourcesDirectory)/multistage-pipeline/nuget/CIS4Azure-nuget/**/*Tests.ps1'
        targetFolder: $(Build.ArtifactStagingDirectory)/tests/CIS4Azure-nuget
        flattenFolders: true

    # publish artifact for archive
    - task: PublishPipelineArtifact@1
      displayName: Gather - Publish drop
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'drop'

    #########################
    # test template

    # install Pester
    - powershell: Install-Module Pester -Force -RequiredVersion 4.10.1
      displayName: 'Test - Install Pester version 4.10.1'
    # execute pester
    - powershell: |
            $parameters = @{ TemplatePath = "$(Build.ArtifactStagingDirectory)/arm/azuredeploy.json" }
            $script = @{ Path = "$(Build.ArtifactStagingDirectory)/tests/"; Parameters = $parameters } # runs all tests in this directory
            
            $dir = Get-ChildItem -Path $(Build.ArtifactStagingDirectory)
            Write-Host $dir

            Invoke-Pester -Script $script -OutputFile TEST-all.xml -OutputFormat NUnitXML
      displayName: 'Test - Run Pester Tests'

    # publish test results
    - task: PublishTestResults@2
      displayName: Test - Publish Test Results
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '**/TEST-*.xml'
        failTaskOnFailedTests: true

######################################################################################
- stage: deploy_to_dev
  displayName: Deploy to Dev
  dependsOn: gather_test
  condition: succeeded()

  jobs:
  - deployment: deploy_to_dev
    displayName: Deploy to Development
    environment: 'development'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Mark Garner - Internal Consumption(75ebdae9-6e1c-4baa-8b2e-5576f6356a91)'
              subscriptionId: '75ebdae9-6e1c-4baa-8b2e-5576f6356a91'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'multistage-pipeline-dev'
              location: 'Central US'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/drop/arm/azuredeploy.json'
              csmParametersFile: '$(Pipeline.Workspace)/drop/arm/dev.azuredeploy.parameters.json'
              deploymentMode: 'Complete'

######################################################################################
- stage: deploy_to_test
  displayName: Deploy to Test
  dependsOn: deploy_to_dev
  condition: succeeded()

  jobs:
  - deployment: deploy_to_test
    displayName: Deploy to Test
    environment: 'test'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Mark Garner - Internal Consumption(75ebdae9-6e1c-4baa-8b2e-5576f6356a91)'
              subscriptionId: '75ebdae9-6e1c-4baa-8b2e-5576f6356a91'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'multistage-pipeline-tst'
              location: 'Central US'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/drop/arm/azuredeploy.json'
              csmParametersFile: '$(Pipeline.Workspace)/drop/arm/tst.azuredeploy.parameters.json'
              deploymentMode: 'Complete'
          