trigger:
  branches:
    include:
    - master
  
stages:

######################################################################################
- stage: build_artifact
  displayName: Build ARM Template Artifact

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/arm' 
        artifactName: 'drop'

######################################################################################
- stage: test_artifact
  displayName: Test ARM Template

  jobs:
  - job: Test
    displayName: Test
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Artifact'
      inputs:
        artifactName: drop
    - powershell: Install-Module Pester -Force
      displayName: 'Install Pester'
    - powershell: |
            $parameters = @{ TemplateFile = ".\LogicApp.json" }
            $script = @{ Path = "tests/simple.Tests.ps1"; Parameters = $parameters }
            Invoke-Pester -Script $script -OutputFile TEST-simple.xml -OutputFormat NUnitXML
      displayName: 'Invoke Pester'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '**/TEST-*.xml'

######################################################################################
- stage: deploy_to_dev
  displayName: Deploy to Dev
  dependsOn: test_artifact
  condition: succeeded()

  jobs:
  - deployment: deploy_to_dev
    displayName: Deploy to Development
    environment: 'development'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:

          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Artifact'
            inputs:
              artifactName: drop

######################################################################################
- stage: deploy_to_test
  displayName: Deploy to Test
  dependsOn: deploy_to_dev
  condition: succeeded()

  jobs:
  - deployment: deploy_to_test
    displayName: Deploy to Test
    environment: 'test'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:

          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Artifact'
            inputs:
              artifactName: drop
          