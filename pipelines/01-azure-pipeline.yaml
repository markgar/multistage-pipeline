trigger:
  branches:
    include:
    - master
  
stages:

######################################################################################
- stage: build_artifact
  displayName: Build Artifact

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/arm' 
        artifactName: 'drop'

######################################################################################
- stage: test_artifact
  displayName: Test Artifact

  jobs:
  - job: Test
    displayName: Test
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        #buildType: 'current'
        #project: # Required when buildType == Specific
        #pipeline: # Required when buildType == Specific
        #specificBuildWithTriggering: false # Optional
        #buildVersionToDownload: 'latest' # Required when buildType == Specific. Options: latest, latestFromBranch, specific
        #allowPartiallySucceededBuilds: false # Optional
        #branchName: 'refs/heads/master' # Required when buildType == Specific && BuildVersionToDownload == LatestFromBranch
        #buildId: # Required when buildType == Specific && BuildVersionToDownload == Specific
        #tags: # Optional
        #downloadType: 'single' # Choose whether to download a single artifact or all artifacts of a specific build. Options: single, specific
        artifactName: drop
        #itemPattern: '**' # Optional
        #downloadPath: '$(System.ArtifactsDirectory)' 
        #parallelizationLimit: '8' # Optional
    - script: echo Do your Tests here!
      displayName: 'Run a one-line script'

######################################################################################
- stage: deploy_to_dev
  displayName: Deploy to Dev
  dependsOn: test_artifact
  condition: succeeded()

  jobs:
  - deployment: deploy_to_dev
    displayName: Deploy to Development
    environment: 'development'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:

          steps:
          - script: echo Deploy to Dev here!
            displayName: 'Run a one-line script'

######################################################################################
- stage: deploy_to_test
  displayName: Deploy to Test
  dependsOn: deploy_to_dev
  condition: succeeded()

  jobs:
  - deployment: deploy_to_test
    displayName: Test
    environment: 'test'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:

          steps:
          - script: echo Deploy to Test here!
            displayName: 'Run a one-line script'
          