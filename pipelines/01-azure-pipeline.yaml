resources:
  repositories:
  - repository: TestsRepo # The name used to reference this repository in the checkout step
    type: github
    endpoint: markgar
    name: markgar/CIS4Azure-Pester

trigger:
  branches:
    include:
    - master

stages:

######################################################################################
- stage: build_artifact
  displayName: Build ARM Template Artifact

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self
      displayName: Checkout default repository
    - checkout: TestsRepo
      displayName: Checkout tests repository from hithub
    - task: CopyFiles@2
      displayName: Copy ARM templates to Artifact Staging
      inputs:
        contents: '$(Build.SourcesDirectory)/multistage-pipeline/arm/*'
        targetFolder: $(Build.ArtifactStagingDirectory)/arm
        flattenFolders: true
    # - task: CopyFiles@2
    #   displayName: Copy Pester tests to Artifact Staging
    #   inputs:
    #     contents: '$(Build.SourcesDirectory)/CIS4Azure-Pester/pester/*'
    #     targetFolder: $(Build.ArtifactStagingDirectory)/tests/CIS4Azure-checkout
    #     flattenFolders: true
    - task: NuGetCommand@2
      displayName: Restore CIS4Azure from nuget.org
      inputs:
        command: 'restore'
        restoreSolution: '$(Build.SourcesDirectory)/multistage-pipeline/packages.config'
        restoreDirectory: 'nuget/CIS4Azure-nuget'
        feedsToUse: 'select'
        includeNuGetOrg: true
    - task: CopyFiles@2
      displayName: Copy nuget Pester tests to Artifact Staging
      inputs:
        contents: '$(Build.SourcesDirectory)/multistage-pipeline/nuget/CIS4Azure-nuget/**/*Tests.ps1'
        targetFolder: $(Build.ArtifactStagingDirectory)/tests/CIS4Azure-nuget
        flattenFolders: true
    - task: PublishPipelineArtifact@1
      displayName: Publish drop
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'drop'

######################################################################################
- stage: test_artifact
  displayName: Test ARM Template

  jobs:
  - deployment: test_arm_template
    displayName: Test Arm Template (deployment step)
    environment: 'development'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:
          steps:
          - powershell: Install-Module Pester -Force -RequiredVersion 4.10.1
            displayName: 'Install Pester 4.10.1'
          - powershell: |
                  $parameters = @{ TemplatePath = "$(Pipeline.Workspace)/drop/arm/azuredeploy.json" }
                  $script = @{ Path = "$(Pipeline.Workspace)/drop/tests/"; Parameters = $parameters } 
                  Invoke-Pester -Script $script -OutputFile TEST-all.xml -OutputFormat NUnitXML
            displayName: Invoke Pester
          - task: PublishTestResults@2
            displayName: Publish Test Results
            inputs:
              testResultsFormat: 'NUnit'
              testResultsFiles: '**/TEST-*.xml'
              failTaskOnFailedTests: true

  - job: Test
    displayName: Test
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: drop
    # - task: AzureResourceManagerTemplateDeployment@3
    #   displayName: 'Perform VALIDATE on the ARM template'
    #   inputs:
    #     deploymentScope: 'Resource Group'
    #     azureResourceManagerConnection: 'Mark Garner - Internal Consumption(75ebdae9-6e1c-4baa-8b2e-5576f6356a91)'
    #     subscriptionId: '75ebdae9-6e1c-4baa-8b2e-5576f6356a91'
    #     action: 'Create Or Update Resource Group'
    #     resourceGroupName: 'multistage-pipeline-dev'
    #     location: 'Central US'
    #     templateLocation: 'Linked artifact'
    #     csmFile: '$(Build.SourcesDirectory)/arm/azuredeploy.json'
    #     csmParametersFile: '$(Build.SourcesDirectory)/arm/dev.azuredeploy.parameters.json'
    #     deploymentMode: 'Validate'
    - powershell: Install-Module Pester -Force -RequiredVersion 4.10.1
      displayName: 'Install Pester version 4.10.1'
    - powershell: |
            $parameters = @{ TemplatePath = "$(Pipeline.Workspace)/drop/arm/azuredeploy.json" }
            $script = @{ Path = "$(Pipeline.Workspace)/drop/tests/"; Parameters = $parameters } # runs all tests in this directory
            $dir = Get-ChildItem -Path $(Build.ArtifactStagingDirectory)
            Write-Host $dir
            $dir = Get-ChildItem -Path $(Pipeline.Workspace)
            Write-Host $dir
            $dir = Get-ChildItem -Path "$(Pipeline.Workspace)/a"
            Write-Host $dir
            $dir = Get-ChildItem -Path "$(Pipeline.Workspace)/b"
            Write-Host $dir
            $dir = Get-ChildItem -Path "$(Pipeline.Workspace)/s"
            Write-Host $dir
            Invoke-Pester -Script $script -OutputFile TEST-all.xml -OutputFormat NUnitXML
      displayName: 'Run Pester Tests'
    - task: PublishTestResults@2
      displayName: Publish Test Results
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '**/TEST-*.xml'
        failTaskOnFailedTests: true

######################################################################################
- stage: deploy_to_dev
  displayName: Deploy to Dev
  dependsOn: test_artifact
  condition: succeeded()

  jobs:
  - deployment: deploy_to_dev
    displayName: Deploy to Development
    environment: 'development'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Mark Garner - Internal Consumption(75ebdae9-6e1c-4baa-8b2e-5576f6356a91)'
              subscriptionId: '75ebdae9-6e1c-4baa-8b2e-5576f6356a91'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'multistage-pipeline-dev'
              location: 'Central US'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/drop/arm/azuredeploy.json'
              csmParametersFile: '$(Pipeline.Workspace)/drop/arm/dev.azuredeploy.parameters.json'
              deploymentMode: 'Complete'

######################################################################################
- stage: deploy_to_test
  displayName: Deploy to Test
  dependsOn: deploy_to_dev
  condition: succeeded()

  jobs:
  - deployment: deploy_to_test
    displayName: Deploy to Test
    environment: 'test'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Mark Garner - Internal Consumption(75ebdae9-6e1c-4baa-8b2e-5576f6356a91)'
              subscriptionId: '75ebdae9-6e1c-4baa-8b2e-5576f6356a91'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'multistage-pipeline-tst'
              location: 'Central US'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/drop/arm/azuredeploy.json'
              csmParametersFile: '$(Pipeline.Workspace)/drop/arm/tst.azuredeploy.parameters.json'
              deploymentMode: 'Complete'
          